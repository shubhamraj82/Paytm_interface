// Generated by view binder compiler. Do not edit!
package com.android.paytmclone.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.android.paytmclone.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityUpiBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView amount;

  @NonNull
  public final ConstraintLayout c0;

  @NonNull
  public final ConstraintLayout c1;

  @NonNull
  public final ConstraintLayout c2;

  @NonNull
  public final ConstraintLayout c3;

  @NonNull
  public final ConstraintLayout c4;

  @NonNull
  public final ConstraintLayout c5;

  @NonNull
  public final ConstraintLayout c6;

  @NonNull
  public final ConstraintLayout c7;

  @NonNull
  public final ConstraintLayout c8;

  @NonNull
  public final ConstraintLayout c9;

  @NonNull
  public final ConstraintLayout constraintLayout4;

  @NonNull
  public final ConstraintLayout constraintLayout5;

  @NonNull
  public final TextView dismiss;

  @NonNull
  public final View divider4;

  @NonNull
  public final ConstraintLayout done;

  @NonNull
  public final CardView dot1;

  @NonNull
  public final CardView dot2;

  @NonNull
  public final CardView dot3;

  @NonNull
  public final CardView dot4;

  @NonNull
  public final ConstraintLayout erase;

  @NonNull
  public final ConstraintLayout errorLayout;

  @NonNull
  public final ImageView imageView14;

  @NonNull
  public final ImageView imageView9;

  @NonNull
  public final LinearLayout linearLayout3;

  @NonNull
  public final ConstraintLayout main;

  @NonNull
  public final TextView textView11;

  @NonNull
  public final TextView textView19;

  @NonNull
  public final TextView textView20;

  @NonNull
  public final TextView textView21;

  @NonNull
  public final TextView textView22;

  @NonNull
  public final TextView textView23;

  @NonNull
  public final TextView textView24;

  @NonNull
  public final TextView textView25;

  @NonNull
  public final View view1;

  @NonNull
  public final View view2;

  @NonNull
  public final View view3;

  @NonNull
  public final View view4;

  private ActivityUpiBinding(@NonNull ConstraintLayout rootView, @NonNull TextView amount,
      @NonNull ConstraintLayout c0, @NonNull ConstraintLayout c1, @NonNull ConstraintLayout c2,
      @NonNull ConstraintLayout c3, @NonNull ConstraintLayout c4, @NonNull ConstraintLayout c5,
      @NonNull ConstraintLayout c6, @NonNull ConstraintLayout c7, @NonNull ConstraintLayout c8,
      @NonNull ConstraintLayout c9, @NonNull ConstraintLayout constraintLayout4,
      @NonNull ConstraintLayout constraintLayout5, @NonNull TextView dismiss,
      @NonNull View divider4, @NonNull ConstraintLayout done, @NonNull CardView dot1,
      @NonNull CardView dot2, @NonNull CardView dot3, @NonNull CardView dot4,
      @NonNull ConstraintLayout erase, @NonNull ConstraintLayout errorLayout,
      @NonNull ImageView imageView14, @NonNull ImageView imageView9,
      @NonNull LinearLayout linearLayout3, @NonNull ConstraintLayout main,
      @NonNull TextView textView11, @NonNull TextView textView19, @NonNull TextView textView20,
      @NonNull TextView textView21, @NonNull TextView textView22, @NonNull TextView textView23,
      @NonNull TextView textView24, @NonNull TextView textView25, @NonNull View view1,
      @NonNull View view2, @NonNull View view3, @NonNull View view4) {
    this.rootView = rootView;
    this.amount = amount;
    this.c0 = c0;
    this.c1 = c1;
    this.c2 = c2;
    this.c3 = c3;
    this.c4 = c4;
    this.c5 = c5;
    this.c6 = c6;
    this.c7 = c7;
    this.c8 = c8;
    this.c9 = c9;
    this.constraintLayout4 = constraintLayout4;
    this.constraintLayout5 = constraintLayout5;
    this.dismiss = dismiss;
    this.divider4 = divider4;
    this.done = done;
    this.dot1 = dot1;
    this.dot2 = dot2;
    this.dot3 = dot3;
    this.dot4 = dot4;
    this.erase = erase;
    this.errorLayout = errorLayout;
    this.imageView14 = imageView14;
    this.imageView9 = imageView9;
    this.linearLayout3 = linearLayout3;
    this.main = main;
    this.textView11 = textView11;
    this.textView19 = textView19;
    this.textView20 = textView20;
    this.textView21 = textView21;
    this.textView22 = textView22;
    this.textView23 = textView23;
    this.textView24 = textView24;
    this.textView25 = textView25;
    this.view1 = view1;
    this.view2 = view2;
    this.view3 = view3;
    this.view4 = view4;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityUpiBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityUpiBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_upi, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityUpiBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.amount;
      TextView amount = ViewBindings.findChildViewById(rootView, id);
      if (amount == null) {
        break missingId;
      }

      id = R.id.c0;
      ConstraintLayout c0 = ViewBindings.findChildViewById(rootView, id);
      if (c0 == null) {
        break missingId;
      }

      id = R.id.c1;
      ConstraintLayout c1 = ViewBindings.findChildViewById(rootView, id);
      if (c1 == null) {
        break missingId;
      }

      id = R.id.c2;
      ConstraintLayout c2 = ViewBindings.findChildViewById(rootView, id);
      if (c2 == null) {
        break missingId;
      }

      id = R.id.c3;
      ConstraintLayout c3 = ViewBindings.findChildViewById(rootView, id);
      if (c3 == null) {
        break missingId;
      }

      id = R.id.c4;
      ConstraintLayout c4 = ViewBindings.findChildViewById(rootView, id);
      if (c4 == null) {
        break missingId;
      }

      id = R.id.c5;
      ConstraintLayout c5 = ViewBindings.findChildViewById(rootView, id);
      if (c5 == null) {
        break missingId;
      }

      id = R.id.c6;
      ConstraintLayout c6 = ViewBindings.findChildViewById(rootView, id);
      if (c6 == null) {
        break missingId;
      }

      id = R.id.c7;
      ConstraintLayout c7 = ViewBindings.findChildViewById(rootView, id);
      if (c7 == null) {
        break missingId;
      }

      id = R.id.c8;
      ConstraintLayout c8 = ViewBindings.findChildViewById(rootView, id);
      if (c8 == null) {
        break missingId;
      }

      id = R.id.c9;
      ConstraintLayout c9 = ViewBindings.findChildViewById(rootView, id);
      if (c9 == null) {
        break missingId;
      }

      id = R.id.constraintLayout4;
      ConstraintLayout constraintLayout4 = ViewBindings.findChildViewById(rootView, id);
      if (constraintLayout4 == null) {
        break missingId;
      }

      id = R.id.constraintLayout5;
      ConstraintLayout constraintLayout5 = ViewBindings.findChildViewById(rootView, id);
      if (constraintLayout5 == null) {
        break missingId;
      }

      id = R.id.dismiss;
      TextView dismiss = ViewBindings.findChildViewById(rootView, id);
      if (dismiss == null) {
        break missingId;
      }

      id = R.id.divider4;
      View divider4 = ViewBindings.findChildViewById(rootView, id);
      if (divider4 == null) {
        break missingId;
      }

      id = R.id.done;
      ConstraintLayout done = ViewBindings.findChildViewById(rootView, id);
      if (done == null) {
        break missingId;
      }

      id = R.id.dot1;
      CardView dot1 = ViewBindings.findChildViewById(rootView, id);
      if (dot1 == null) {
        break missingId;
      }

      id = R.id.dot2;
      CardView dot2 = ViewBindings.findChildViewById(rootView, id);
      if (dot2 == null) {
        break missingId;
      }

      id = R.id.dot3;
      CardView dot3 = ViewBindings.findChildViewById(rootView, id);
      if (dot3 == null) {
        break missingId;
      }

      id = R.id.dot4;
      CardView dot4 = ViewBindings.findChildViewById(rootView, id);
      if (dot4 == null) {
        break missingId;
      }

      id = R.id.erase;
      ConstraintLayout erase = ViewBindings.findChildViewById(rootView, id);
      if (erase == null) {
        break missingId;
      }

      id = R.id.errorLayout;
      ConstraintLayout errorLayout = ViewBindings.findChildViewById(rootView, id);
      if (errorLayout == null) {
        break missingId;
      }

      id = R.id.imageView14;
      ImageView imageView14 = ViewBindings.findChildViewById(rootView, id);
      if (imageView14 == null) {
        break missingId;
      }

      id = R.id.imageView9;
      ImageView imageView9 = ViewBindings.findChildViewById(rootView, id);
      if (imageView9 == null) {
        break missingId;
      }

      id = R.id.linearLayout3;
      LinearLayout linearLayout3 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout3 == null) {
        break missingId;
      }

      ConstraintLayout main = (ConstraintLayout) rootView;

      id = R.id.textView11;
      TextView textView11 = ViewBindings.findChildViewById(rootView, id);
      if (textView11 == null) {
        break missingId;
      }

      id = R.id.textView19;
      TextView textView19 = ViewBindings.findChildViewById(rootView, id);
      if (textView19 == null) {
        break missingId;
      }

      id = R.id.textView20;
      TextView textView20 = ViewBindings.findChildViewById(rootView, id);
      if (textView20 == null) {
        break missingId;
      }

      id = R.id.textView21;
      TextView textView21 = ViewBindings.findChildViewById(rootView, id);
      if (textView21 == null) {
        break missingId;
      }

      id = R.id.textView22;
      TextView textView22 = ViewBindings.findChildViewById(rootView, id);
      if (textView22 == null) {
        break missingId;
      }

      id = R.id.textView23;
      TextView textView23 = ViewBindings.findChildViewById(rootView, id);
      if (textView23 == null) {
        break missingId;
      }

      id = R.id.textView24;
      TextView textView24 = ViewBindings.findChildViewById(rootView, id);
      if (textView24 == null) {
        break missingId;
      }

      id = R.id.textView25;
      TextView textView25 = ViewBindings.findChildViewById(rootView, id);
      if (textView25 == null) {
        break missingId;
      }

      id = R.id.view1;
      View view1 = ViewBindings.findChildViewById(rootView, id);
      if (view1 == null) {
        break missingId;
      }

      id = R.id.view2;
      View view2 = ViewBindings.findChildViewById(rootView, id);
      if (view2 == null) {
        break missingId;
      }

      id = R.id.view3;
      View view3 = ViewBindings.findChildViewById(rootView, id);
      if (view3 == null) {
        break missingId;
      }

      id = R.id.view4;
      View view4 = ViewBindings.findChildViewById(rootView, id);
      if (view4 == null) {
        break missingId;
      }

      return new ActivityUpiBinding((ConstraintLayout) rootView, amount, c0, c1, c2, c3, c4, c5, c6,
          c7, c8, c9, constraintLayout4, constraintLayout5, dismiss, divider4, done, dot1, dot2,
          dot3, dot4, erase, errorLayout, imageView14, imageView9, linearLayout3, main, textView11,
          textView19, textView20, textView21, textView22, textView23, textView24, textView25, view1,
          view2, view3, view4);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
